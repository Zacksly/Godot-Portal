[gd_resource type="ShaderMaterial" load_steps=5 format=2]

[ext_resource path="res://Textures/portal_inactive.png" type="Texture" id=1]

[sub_resource type="Shader" id=1]
code = "shader_type spatial;
render_mode unshaded; //, cull_disabled;
uniform vec4 modulate : hint_color;
uniform sampler2D overlay : hint_albedo;
uniform sampler2D texture_albedo : hint_albedo;
uniform sampler2D inactive_albedo : hint_albedo;
uniform bool active = false;
uniform float mix_amount = 0.0;
uniform float deform_amount : hint_range(-1,1);
uniform float deform_speed : hint_range(0.5,4);

void fragment() {
	
	// Camera view
	vec4 screen_view = texture(texture_albedo, SCREEN_UV);
	
	// Create texture warp
	vec2 new_uv = UV * 5.0;
	float offset_x = cos(TIME + new_uv.x + new_uv.y) * 0.05;
	float offset_y = sin(TIME + new_uv.x + new_uv.y) * 0.05;
	vec2 distorted_uv = UV + vec2(offset_x, offset_y);
	vec4 texture_view = texture(inactive_albedo, distorted_uv) * vec4(modulate.rgb, 1);

	// Portal Edges
	vec2 outline_uv = UV;
	vec4 outline = texture(overlay, outline_uv);
	
	if(outline.rgb == vec3(1.0, 0.0, 0.0)){
		ALBEDO = mix(screen_view.rgb, texture_view.rgb, mix_amount);
	}else{
		ALBEDO = outline.rgb * modulate.rgb;
		ALPHA = outline.a;
	}

	//ALBEDO = view.rgb;
}"

[sub_resource type="Gradient" id=2]
offsets = PoolRealArray( 0 )
colors = PoolColorArray( 1, 1, 1, 1 )

[sub_resource type="GradientTexture" id=3]
gradient = SubResource( 2 )

[resource]
shader = SubResource( 1 )
shader_param/modulate = Color( 1, 1, 1, 1 )
shader_param/active = false
shader_param/mix_amount = 1.0
shader_param/deform_amount = 0.5
shader_param/deform_speed = null
shader_param/overlay = SubResource( 3 )
shader_param/inactive_albedo = ExtResource( 1 )
